name: Deploy Docker Containers

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Paso 1: Configurar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # Paso 2: Configurar archivo VPN y conectarse
    - name: Configure and Connect to VPN
      run: |
        echo "${{ secrets.VPN_CONFIG }}" > vpn-config.ovpn
        echo "${{ secrets.VPN_CREDENTIALS }}" > vpn-credentials.txt
        chmod 600 vpn-credentials.txt
        sudo apt-get update && sudo apt-get install -y openvpn
        sudo openvpn --config vpn-config.ovpn --auth-user-pass vpn-credentials.txt --daemon

    # Paso 3: Verificar conexión VPN
    - name: Verify VPN Connection
      run: |
        IP=$(curl -s ifconfig.me)
        echo "Connected via VPN with IP: $IP"
        # Opcional: Validar que IP pertenezca a la red esperada
        [[ $IP =~ ^198\.51\.100\..*$ ]] || exit 1

    # Paso 4: Establecer conexión SSH
    - name: Connect via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_PASSWORD }}
        port: 22
        script: |
          echo "SSH connection established"

    # Paso 5: Ejecutar contenedor Docker (Ejemplo con hello-world)
    - name: Run Docker Hello World Container
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_PASSWORD }}
        port: 22
        script: |
          # Ejecutar contenedor hello-world como ejemplo
          docker run hello-world

    # Paso 6: Desconectar de la VPN
    - name: Disconnect VPN
      if: always()
      run: |
        sudo pkill openvpn
